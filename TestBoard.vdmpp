class TestBoard
	
operations
	protected assertTrue: bool ==> ()
	assertTrue(a) == 
		return 
	pre a;
	
	protected assertEqual: ? * ? ==> ()
	assertEqual(expected, actual) == 
		if expected <> actual then (
  		IO`print("Actual value (");
  		IO`print(actual); 
  		IO`print(") different from expected (");
  		IO`print(expected);
  		IO`println(")\n")
		)
	post expected = actual;
 

	public TestCanItdMove : () ==> ()
	TestCanItdMove() == 
	(
		dcl board : Board := new Board();
		dcl cpW : Board`TypeOfPiece := <White>;
		
		--board.movePiece([1,1], [3,1], cpW);
		--board.movePiece([2,6], [4,6], cpW);
		--board.movePiece([5,8], [6,8], cpW);
		--board.movePiece([6,8], [2,8], cpW);
		
		
		assertTrue(board.canItMove(cpW, [1,1], [3,1]));
		assertTrue(board.canItMove(cpW, [2,6], [4,6]));
		assertTrue(board.canItMove(cpW, [5,8], [6,8]));
		assertTrue(board.canItMove(cpW, [6,8], [2,8]));
	);


end TestBoard